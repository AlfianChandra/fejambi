import{d as v,e as l,j as _,k as h,p as b,r as f,o as n,c as r,g as o,u as g,h as k,t as w,a as B,q as T}from"./index-CHApRfAO.js";import{h as S}from"./moment-C5S46NFB.js";import{a as x}from"./axios-BimPEqV4.js";const I="/assets/batt-OzIihCY1.png",M={class:"battery-container"},Y={key:0,class:"batimg"},C=["src"],D={class:"bt-parent"},N={class:"bt-perc"},V={key:1,class:"batt-failed"},E=v({__name:"BatteryView",props:{idSpot:{type:[Number],required:!0}},setup(p){const d=p,t=l({}),i=l(!1);_(async()=>{await c().then(e=>{t.value=e,u()})});const u=()=>{if(t.value!=null&&t.value.timestamp!=null){const e=S().format("YYYY-MM-DDTHH:MM:SS").split("T")[0],a=t.value.timestamp.split("T")[0];e==a&&(i.value=!0)}},m=setInterval(async()=>{await c().then(e=>{t.value=e})},6e4);h(()=>{clearInterval(m)});const c=async()=>new Promise(async(e,a)=>{try{const s={idspot:d.idSpot},y=await x.post(b.baseEnd+"api/Battery/getbatterylevel",s,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("authToken")}`}});e(y.data)}catch(s){a(s)}});return(e,a)=>{const s=f("font-awesome-icon");return n(),r("div",M,[t.value&&i.value?(n(),r("div",Y,[o("img",{src:g(I),alt:"battery"},null,8,C),o("div",D,[o("span",{style:k({width:`${t.value.batt}%`}),class:"bt-child"},null,4),o("div",N,w(t.value.batt)+"%",1)])])):(n(),r("span",V,[o("b",null,[B(s,{icon:"exclamation-triangle"}),a[0]||(a[0]=T(" Battery reading failed"))])]))])}}});export{E as _};
